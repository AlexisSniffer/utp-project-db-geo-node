// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  username   String       @unique
  password   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  tracks     tracks[]
  user_roles user_roles[]
  alerts     alerts[]
}

model tracks {
  id        Int      @id @default(autoincrement())
  userId    Int
  latitude  Decimal
  longitude Decimal
  date      DateTime
  user      users    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model sites {
  id        Int      @id @default(autoincrement())
  name      String
  latitude  Decimal
  longitude Decimal
  zoom      Int
  createdAt DateTime @default(now())
}

model config {
  id        Int      @id @default(autoincrement())
  zoom      Int?
  createdAt DateTime @default(now())
}

model roles {
  id          Int                @id @default(autoincrement())
  name        String             @unique
  description String?
  createdAt   DateTime           @default(now())
  permissions role_permissions[]
  user_roles  user_roles[]
}

model permissions {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  description      String?
  role_permissions role_permissions[]
}

model role_permissions {
  roleId       Int
  permissionId Int

  role       roles       @relation(fields: [roleId], references: [id])
  permission permissions @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

model user_roles {
  userId Int
  roleId Int

  user users @relation(fields: [userId], references: [id])
  role roles @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model alerts {
  id        Int      @id @default(autoincrement())
  userId    Int?
  latitude  Decimal
  longitude Decimal
  message   String
  sentAt    DateTime @default(now())
  user      users?   @relation(fields: [userId], references: [id])
}
